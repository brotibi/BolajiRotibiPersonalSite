{"ast":null,"code":"\"use strict\";\n\nvar React = require('react');\n\nvar CreateReactClass = require('create-react-class');\n\nvar PropTypes = require('prop-types');\n\nvar NavigatableMixin = require('./NavigatableMixin');\n\nvar Environment = require('./environment');\n\nvar assign = Object.assign || require('object-assign');\n\nvar omit = require('object.omit');\n/**\n * Link.\n *\n * A basic navigatable component which renders into <a> DOM element and handles\n * onClick event by transitioning onto different route (defined by\n * this.props.href).\n */\n\n\nvar Link = CreateReactClass({\n  mixins: [NavigatableMixin],\n  displayName: 'Link',\n  propTypes: {\n    href: PropTypes.string.isRequired,\n    global: PropTypes.bool,\n    globalHash: PropTypes.bool\n  },\n  onClick: function (e) {\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    } // return if the link target is external\n\n\n    if (this.props.href.match(/^([a-z-]+:|\\/\\/)/)) return; // return if the user did a middle-click, right-click, or used a modifier\n    // key (like ctrl-click, meta-click, shift-click, etc.)\n\n    if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return;\n\n    if (!e.defaultPrevented) {\n      e.preventDefault();\n\n      this._navigate(this.props.href, function (err) {\n        if (err) {\n          throw err;\n        }\n      });\n    }\n  },\n  _navigationParams: function () {\n    var params = {};\n\n    for (var k in this.props) {\n      if (!this.constructor.propTypes[k]) {\n        params[k] = this.props[k];\n      }\n    }\n\n    return params;\n  },\n  _createHref: function () {\n    return this.props.global ? Environment.defaultEnvironment.makeHref(this.props.href) : this.makeHref(this.props.href);\n  },\n  _navigate: function (path, cb) {\n    if (this.props.globalHash) {\n      return Environment.hashEnvironment.navigate(path, cb);\n    }\n\n    if (this.props.global) {\n      return Environment.defaultEnvironment.navigate(path, cb);\n    }\n\n    return this.navigate(path, this._navigationParams(), cb);\n  },\n  render: function () {\n    var props = assign({}, this.props, {\n      onClick: this.onClick,\n      href: this._createHref()\n    });\n    props = omit(props, ['global', 'globalHash', '_query']);\n    return React.createElement('a', props, this.props.children);\n  }\n});\nmodule.exports = Link;","map":null,"metadata":{},"sourceType":"script"}