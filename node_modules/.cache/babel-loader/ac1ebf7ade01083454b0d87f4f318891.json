{"ast":null,"code":"\"use strict\";\n\nvar React = require('react');\n\nvar CreateReactClass = require('create-react-class');\n\nvar PropTypes = require('prop-types');\n\nfunction createClass(name) {\n  return CreateReactClass({\n    displayName: name,\n    propTypes: {\n      handler: PropTypes.oneOfType([// Can be ReactElement or ReactComponent, unfortunately there is no way to typecheck\n      // ReactComponent (that I know of)\n      PropTypes.element, PropTypes.func]),\n      path: name === 'NotFound' ? function (props, propName) {\n        if (props[propName]) throw new Error(\"Don't pass a `path` to NotFound.\");\n      } : PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(RegExp)]).isRequired,\n      urlPatternOptions: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.object])\n    },\n    getDefaultProps: function () {\n      if (name === 'NotFound') {\n        return {\n          path: null\n        };\n      }\n\n      return {};\n    },\n    render: function () {\n      throw new Error(name + \" is not meant to be directly rendered.\");\n    }\n  });\n}\n\nmodule.exports = {\n  /**\n   * Regular route descriptor.\n   *\n   * @param {Object} spec\n   */\n  Route: createClass('Route'),\n\n  /**\n   * Catch all route descriptor.\n   *\n   * @param {Object} spec\n   */\n  NotFound: createClass('NotFound')\n};","map":null,"metadata":{},"sourceType":"script"}