{"ast":null,"code":"\"use strict\";\n\nvar Environment = require('./Environment');\n/**\n * Routing environment which routes by `location.hash`.\n */\n\n\nfunction HashEnvironment() {\n  this.onHashChange = this.onHashChange.bind(this);\n  Environment.call(this);\n}\n\nHashEnvironment.prototype = Object.create(Environment.prototype);\nHashEnvironment.prototype.constructor = HashEnvironment;\n\nHashEnvironment.prototype.getPath = function () {\n  return window.location.hash.slice(1) || '/';\n};\n\nHashEnvironment.prototype.pushState = function (path, navigation) {\n  window.location.hash = path;\n};\n\nHashEnvironment.prototype.replaceState = function (path, navigation) {\n  var href = window.location.href.replace(/(javascript:|#).*$/, '');\n  window.location.replace(href + '#' + path);\n};\n\nHashEnvironment.prototype.start = function () {\n  if (window.addEventListener) {\n    window.addEventListener('hashchange', this.onHashChange);\n  } else {\n    window.attachEvent('onhashchange', this.onHashChange);\n  }\n};\n\nHashEnvironment.prototype.stop = function () {\n  if (window.removeEventListener) {\n    window.removeEventListener('hashchange', this.onHashChange);\n  } else {\n    window.detachEvent('onhashchange', this.onHashChange);\n  }\n};\n\nHashEnvironment.prototype.onHashChange = function () {\n  var path = this.getPath();\n\n  if (this.path !== path) {\n    this.setPath(path, {\n      isPopState: true\n    });\n  }\n};\n\nmodule.exports = HashEnvironment;","map":null,"metadata":{},"sourceType":"script"}